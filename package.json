{
  "name": "express-api",
  "version": "0.0.0",
  "private": true,
  "nodemonConfig": {
    "exec": "sucrase-node ./app/bin/www.js",
    "watch": [
      "app/*",
      "public/*"
    ],
    "ignore": [
      "**/__tests__/**",
      "*.test.js",
      "*.spec.js"
    ]
  },
  "scripts": {
    "start": "npm run prod",
    "cmd:biofarma": "npm-run-all build && node dist/command.js checkBiofarmaOrder --isV2=false",
    "cmd:din": "npm-run-all build && node dist/command.js createDinOrder --start_date=''",
    "build": "npm-run-all clean transpile",
    "server": "node --max-old-space-size=2048 ./dist/bin/www",
    "development": "npm-run-all build server",
    "prod": "npm-run-all build server",
    "transpile": "sucrase ./app -d ./dist --transforms imports --esModuleInterop",
    "clean": "rimraf dist",
    "dev": "nodemon -L",
    "migrate": "npx sequelize-cli db:migrate",
    "migrate:rollback": "npx sequelize-cli db:migrate:undo",
    "seed": "npx sequelize-cli db:seed:all",
    "test": "set NODE_ENV=test && mocha --require @babel/register './test/*' --exit",
    "test:file": "set NODE_ENV=test && mocha --timeout 20000 --require @babel/register --exit",
    "test:report": "set NODE_ENV=test && mocha --require @babel/register --reporter mochawesome --exit --reporter-options reportFilename=report --charts true",
    "test:coverage": "set NODE_ENV=test && nyc --require @babel/register --reporter=lcov --reporter=text-summary --reporter=json-summary --reporter=text --reporter=html mocha test/*.js --exit",
    "test:name": "set NODE_ENV=test DEBUG=false && mocha --require @babel/register $1 --exit",
    "test:name:coverage": "set NODE_ENV=test && nyc --require @babel/register --reporter=lcov --reporter=text-summary --reporter=json-summary --reporter=text --reporter=html mocha $1 --exit",
    "lint": "npx eslint ./app --quiet",
    "lint:fix": "npx eslint ./app --fix --quiet -o lint-report.html -f html",
    "endpoint:generator": "babel-node endpoint_generator.js",
    "test:load": "k6 run --summary-export=_reports/load/export.json test-load/index.js --out json=_reports/load/test.json",
    "training:seeder": "babel-node ./training/seeder.js",
    "cmd:biofarma-hourly": "npm-run-all build && node dist/command.js checkBiofarmaOrder --isV2=false --monthly=true",
    "cmd:biofarma-delete": "npm-run-all build && node dist/command.js checkDeleteBiofarma",
    "cmd:expired-notif": "npm-run-all build && node dist/command.js expiredNotification",
    "cmd:recap-notif": "npm-run-all build && node dist/command.js recapEntityNotification",
    "cmd:bpom-11": "node dist/command.js cronBPOMHourly 00 10",
    "cmd:bpom-17": "node dist/command.js cronBPOMHourly 11 16",
    "cmd:bpom-23": "node dist/command.js cronBPOMHourly 17 23",
    "cmd:adjust-stock": "node dist/command.js adjustStock",
    "cmd:adjust-stock-per-entity": "node dist/command.js adjustStockPerEntity",
    "cmd:biofarma-hourly-v2": "npm-run-all build && node dist/command.js checkBiofarmaOrder --isV2=true --monthly=true",
    "cmd:biofarma-v2": "npm-run-all build && node dist/command.js checkBiofarmaOrder --isV2=true",
    "cmd:biofarma-smdv": "npm-run-all build && node dist/command.js createBiofarmaSMDVOrders",
    "cmd:yearlyplan-minmax": "npm-run-all build && node dist/command.js generateYearlyPlanMinMax",
    "cmd:greatless-stock": "npm-run-all build && node dist/command.js createGreatLessStockNotif",
    "cmd:order-item-kfa": "npm-run-all build && node dist/command.js startCronOrderItemsKfa",
    "cmd:fill-entity-material-template-stock": "npm-run-all build && node dist/command.js startFillingEntityMaterialTemplateStock"
  },
  "babel": {
    "presets": [
      "@babel/preset-env"
    ],
    "plugins": [
      [
        "@babel/transform-runtime"
      ]
    ]
  },
  "dependencies": {
    "amqplib": "^0.10.3",
    "axios": "^0.21.1",
    "bcryptjs": "^2.4.3",
    "cookie-parser": "~1.4.4",
    "cors": "^2.8.5",
    "csv-split-stream": "^1.0.2",
    "csv-stringify": "^6.2.0",
    "csvtojson": "^2.0.10",
    "debug": "~2.6.9",
    "dotenv": "^8.2.0",
    "ejs": "^3.1.5",
    "elastic-apm-node": "^3.38.0",
    "exceljs": "^4.2.0",
    "express": "^4.18.2",
    "express-rate-limit": "^5.3.0",
    "express-swagger-generator": "^1.1.17",
    "express-validator": "^6.6.1",
    "i18n": "^0.13.2",
    "joi": "^17.3.0",
    "js-sha1": "^0.6.0",
    "jsonwebtoken": "^8.5.1",
    "jszip": "^3.6.0-0",
    "lodash": "^4.17.20",
    "make-runnable": "^1.3.10",
    "moment": "^2.29.1",
    "moment-timezone": "^0.5.33",
    "multer": "^1.4.2",
    "mysql": "^2.18.1",
    "mysql2": "^2.2.5",
    "node-cache": "^5.1.2",
    "node-cron": "^3.0.0",
    "node-sequelize-stream": "^2.0.6",
    "nodemon": "^2.0.4",
    "npm-run-all": "^4.1.5",
    "pino": "^8.16.2",
    "pino-http": "^8.5.1",
    "pino-loki": "^2.1.3",
    "prom-client": "^15.1.0",
    "rate-limit-redis": "^2.1.0",
    "read-excel-file": "^4.1.0",
    "redis": "^4.6.12",
    "regenerator-runtime": "^0.13.7",
    "response-time": "^2.3.2",
    "rimraf": "^3.0.2",
    "rotating-file-stream": "^2.1.3",
    "sequelize": "^6.3.5",
    "sequelize-cli": "^6.2.0",
    "sequelize-paginate": "^1.1.6",
    "winston": "^3.3.3",
    "winston-mongodb": "^5.0.7"
  },
  "devDependencies": {
    "@babel/cli": "^7.11.6",
    "@babel/core": "^7.11.6",
    "@babel/node": "^7.10.5",
    "@babel/plugin-transform-runtime": "^7.11.5",
    "@babel/preset-env": "^7.11.5",
    "@babel/register": "^7.11.5",
    "babel-node": "0.0.1-security",
    "chai": "^4.2.0",
    "chai-http": "^4.3.0",
    "eslint": "^7.32.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jsx-a11y": "^6.8.0",
    "eslint-plugin-react": "^7.33.2",
    "mocha": "^8.1.3",
    "mochawesome": "^6.1.1",
    "nyc": "^15.1.0",
    "pino-pretty": "^10.2.3",
    "sucrase": "^3.19.0"
  }
}
